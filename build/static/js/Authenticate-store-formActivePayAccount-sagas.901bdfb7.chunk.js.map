{"version":3,"sources":["Modules/Authenticate/store/formActivePayAccount/reducer.js","Modules/Authenticate/store/formActivePayAccount/service.js","Modules/Authenticate/store/formActivePayAccount/sagas.js","utility/StoreMethod.js","../node_modules/react-scripts/node_modules/webpack/buildin/module.js"],"names":["reduxFormGenerate","generateFormSubmitRedux","types","SET_ACTIVE_CODE","SET_SUCCESS_NOTI","SET_USER_INFO","actions","setActiveCode","createAction","setSuccessNoti","setUserInfo","defaultState","activeCode","successNoti","userInfo","handleActions","state","payload","postCheckActiveClassCode","codeLanguage","apiMethod","post","API","POST_CHECK_ACTIVE_CLASS_CODE","postActiveClassCode","POST_ACTIVE_CLASS_CODE","getListClass","get","GET_LIST_CLASS","name","nameUp","toUpperCase","submitForm","generateFormSubmitSagas","service","takeLatest","PAGE_DEFAULT","LIMIT_DEFAULT","Array","isArray","keepDataResponse","put","select","getCodeLanguage","call","res","data","status","SUCCESS","retCode","RETCODE_SUCCESS","error","console","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","l","i"],"mappings":"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","file":"static/js/Authenticate-store-formActivePayAccount-sagas.901bdfb7.chunk.js","sourcesContent":["import { handleActions, createAction } from \"redux-actions\"\r\nimport { generateFormSubmitRedux } from \"../../../../utility/StoreMethod\"\r\nconst name = \"formActivePayAccountSuperSchoolMemory\"\r\nconst reduxFormGenerate = generateFormSubmitRedux(name)\r\n\r\nexport const types = {\r\n  ...reduxFormGenerate.types,\r\n  SET_ACTIVE_CODE: \"SET_ACTIVE_CODE\",\r\n  SET_SUCCESS_NOTI: \"SET_SUCCESS_NOTI\",\r\n  SET_USER_INFO: \"SET_USER_INFO\"\r\n}\r\n\r\nexport const actions = {\r\n  ...reduxFormGenerate.actions,\r\n  setActiveCode: createAction(types.SET_ACTIVE_CODE),\r\n  setSuccessNoti: createAction(types.SET_SUCCESS_NOTI),\r\n  setUserInfo: createAction(types.SET_USER_INFO)\r\n}\r\n\r\nconst defaultState = {\r\n  ...reduxFormGenerate.defaultState,\r\n  activeCode: null,\r\n  successNoti: null,\r\n  userInfo: null\r\n}\r\n\r\nexport default handleActions(\r\n  {\r\n    ...reduxFormGenerate.handleActions,\r\n    [types.SET_ACTIVE_CODE]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        activeCode: payload\r\n      }\r\n    },\r\n    [types.SET_SUCCESS_NOTI]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        successNoti: payload\r\n      }\r\n    },\r\n    [types.SET_USER_INFO]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        userInfo: payload\r\n      }\r\n    }\r\n  },\r\n  defaultState\r\n)\r\n","import apiMethod from \"../../../../utility/ApiMethod\";\r\nimport API from \"../../../../configs/api\";\r\nimport moment from \"moment\";\r\n// export const formActivePayAccountSuperSchoolMemoryCallMethod = ({\r\n// \tpayload,\r\n// \tcodeLanguage,\r\n// }) => {\r\n// \treturn apiMethod.post(codeLanguage + API.POST_ACTIVE_CODE, {\r\n// \t\tcardNo: payload.active_code,\r\n\r\n// \t\t// userId: parseInt(payload.userId),\r\n\r\n// \t\t// userName: payload.user_name,\r\n\r\n// \t\tfullName: payload.parent_fullname,\r\n\r\n// \t\t// childFullName1: payload.children_fullname,\r\n// \t\tchild1_SchoolName: payload.school_name,\r\n// \t\tchild1_ClassId: `${payload.class}` || \"\",\r\n\r\n// \t\tcityId: `${payload.city}`,\r\n// \t\t// districtId: `${payload.district}`,\r\n// \t\t// address: payload.street_address,\r\n// \t\tchild1_GradeId: `${payload.class}` || \"\",\r\n// \t\tclassId: `${payload.class}` || \"\",\r\n// \t\tClassId: `${payload.class}` || \"\",\r\n// \t\tgradeId: `${payload.class}` || \"\",\r\n// \t\tGradeId: `${payload.class}` || \"\",\r\n// \t\tgradeid: `${payload.class}` || \"\",\r\n// \t\temail: payload.email,\r\n// \t\tphone: `${payload.phone_number}`.replace(\"84\", \"0\"),\r\n// \t\totp: `${payload.verify_code}`,\r\n// \t\tavartar: payload?.avartar,\r\n// \t\tgenderCode: payload?.gender,\r\n// \t\tdayofbirth: moment(payload?.birth_day, \"DD/MM/YYYY\").format(),\r\n// \t});\r\n// };\r\n// export const getFreeTrialAccountInfo = ({ payload, codeLanguage }) => {\r\n// \treturn apiMethod.post(codeLanguage + API.GET_TRIAL_ACCOUNT_INFO, {\r\n// \t\t...payload,\r\n// \t});\r\n// };\r\n// export const getProfileUser = ({ payload, codeLanguage }) => {\r\n// \treturn apiMethod.post(codeLanguage + API.GET_PROFILE, {\r\n// \t\t...payload,\r\n// \t});\r\n// };\r\n\r\n// export const checkActiveCode = ({ payload, codeLanguage }) => {\r\n// \treturn apiMethod.post(codeLanguage + API.POST_CHECK_ACTIVE_CODE, {\r\n// \t\t...payload,\r\n// \t});\r\n// };\r\n\r\n// export const getTutorialVideo = ({ payload, codeLanguage }) => {\r\n// \treturn apiMethod.get(codeLanguage + API.GET_VIDEO_TUTORIAL_ACTIVE_CODE, {\r\n// \t\t...payload,\r\n// \t});\r\n// };\r\n\r\nexport const postCheckActiveClassCode = ({ payload, codeLanguage }) => {\r\n\treturn apiMethod.post(codeLanguage + API.POST_CHECK_ACTIVE_CLASS_CODE, {\r\n\t\t...payload,\r\n\t});\r\n};\r\n\r\nexport const postActiveClassCode = ({ payload, codeLanguage }) => {\r\n\treturn apiMethod.post(codeLanguage + API.POST_ACTIVE_CLASS_CODE, {\r\n\t\t...payload,\r\n\t});\r\n};\r\nexport const getListClass = (payload) => {\r\n\treturn apiMethod.get(API.GET_LIST_CLASS, {\r\n\t\t...payload,\r\n\t});\r\n};\r\n// export const sendOTP = ({ payload, codeLanguage }) => {\r\n// \treturn apiMethod.post(codeLanguage + API.POST_SEND_OTP, {\r\n// \t\t...payload,\r\n// \t});\r\n// };\r\n","import { takeLatest } from \"redux-saga/effects\"\r\nimport { generateFormSubmitSagas } from \"../../../../utility/StoreMethod\"\r\nimport { actions, types } from \"./reducer\"\r\nimport * as service from \"./service\"\r\n\r\nconst name = \"formActivePayAccountSuperSchoolMemory\"\r\nconst nameUp = name.toUpperCase()\r\nconst sagaListFunction = generateFormSubmitSagas(name, actions, service)\r\nexport const submitForm = sagaListFunction[name + \"CallMethod\"]\r\n\r\nexport default function* () {\r\n  yield takeLatest(types[nameUp + \"_METHOD\"], submitForm)\r\n}\r\n","import { createAction } from \"redux-actions\"\r\nimport { call, put, select } from \"redux-saga/effects\"\r\nimport {\r\n  SUCCESS,\r\n  PAGE_DEFAULT,\r\n  LIMIT_DEFAULT,\r\n  RETCODE_SUCCESS\r\n} from \"../configs/contants\"\r\nimport { getCodeLanguage } from \"@store/common/selectors\"\r\n\r\nconst PAGE_INIT = PAGE_DEFAULT\r\nconst UNIT_INCREASE = 1\r\nconst LIMIT = LIMIT_DEFAULT\r\n\r\nexport const generateListRedux = (name) => {\r\n  const nameUp = name.toUpperCase()\r\n\r\n  const types = {\r\n    SET_LIST_LOADING: `SET_LIST_${nameUp}_LOADING`,\r\n    SET_PAGE_LIST_DEFAULT: `SET_PAGE_LIST_${nameUp}_DEFAULT`,\r\n    SET_LIST_LOADING_LOAD_MORE: `SET_LIST_${nameUp}_LOADING_LOAD_MORE`,\r\n    GET_LIST: `GET_LIST_${nameUp}`,\r\n    GET_LIST_SUCCESS: `GET_LIST_${nameUp}_SUCCESS`,\r\n    GET_LIST_FAILED: `GET_LIST_${nameUp}_FAILED`,\r\n    GET_LIST_LOAD_MORE: `GET_LIST_${nameUp}_LOAD_MORE`,\r\n    GET_LIST_LOAD_MORE_SUCCESS: `GET_LIST_${nameUp}_LOAD_MORE_SUCCESS`,\r\n    GET_LIST_LOAD_MORE_FAILED: `GET_LIST_${nameUp}_LOAD_MORE_FAILED`,\r\n    CLEAR_LIST: `CLEAR_LIST_${nameUp}`\r\n  }\r\n\r\n  const actions = {\r\n    setListLoading: createAction(types.SET_LIST_LOADING),\r\n    getList: createAction(types.GET_LIST),\r\n    getListSuccess: createAction(types.GET_LIST_SUCCESS),\r\n    getListFailed: createAction(types.GET_LIST_FAILED),\r\n    setPageListDefault: createAction(types.SET_PAGE_LIST_DEFAULT),\r\n    setListLoadingLoadMore: createAction(types.SET_LIST_LOADING_LOAD_MORE),\r\n    getListLoadMore: createAction(types.GET_LIST_LOAD_MORE),\r\n    getListLoadMoreSuccess: createAction(types.GET_LIST_LOAD_MORE_SUCCESS),\r\n    getListLoadMoreFailed: createAction(types.GET_LIST_LOAD_MORE_FAILED),\r\n    clearList: createAction(types.CLEAR_LIST)\r\n  }\r\n\r\n  const defaultState = {\r\n    page: PAGE_INIT,\r\n    limit: LIMIT,\r\n    list: [],\r\n    loading: false,\r\n    listMoreLoading: false,\r\n    hasLoadMore: false,\r\n    total: 0,\r\n    error: false\r\n  }\r\n\r\n  const handleActions = {\r\n    [types.SET_LIST_LOADING]: (state, { payload }) => {\r\n      return { ...state, loading: payload }\r\n    },\r\n    [types.GET_LIST_SUCCESS]: (state, { payload }) => {\r\n      const { hasMore, total, page, data } = payload\r\n      return {\r\n        ...state,\r\n        page,\r\n        hasLoadMore: hasMore,\r\n        list: data,\r\n        total,\r\n        error: false\r\n      }\r\n    },\r\n    [types.GET_LIST_FAILED]: (state, { payload }) => {\r\n      return {\r\n        page: PAGE_INIT,\r\n        limit: LIMIT,\r\n        list: [],\r\n        total: 0,\r\n        error: true\r\n      }\r\n    },\r\n    [types.SET_PAGE_LIST_DEFAULT]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        page: PAGE_INIT,\r\n        limit: LIMIT\r\n      }\r\n    },\r\n    [types.SET_LIST_LOADING_LOAD_MORE]: (state, { payload }) => {\r\n      return { ...state, listMoreLoading: payload }\r\n    },\r\n    [types.GET_LIST_LOAD_MORE_SUCCESS]: (state, { payload }) => {\r\n      const { hasMore, total, page, data } = payload\r\n      const list = state.list?.concat(data) || []\r\n      return {\r\n        ...state,\r\n        list,\r\n        page,\r\n        hasLoadMore: hasMore,\r\n        total,\r\n        error: false\r\n      }\r\n    },\r\n    [types.GET_LIST_LOAD_MORE_FAILED]: (state, { payload }) => {\r\n      return { ...state, error: true }\r\n    },\r\n    [types.CLEAR_LIST]: (state, { payload }) => {\r\n      return { ...defaultState }\r\n    }\r\n  }\r\n\r\n  return {\r\n    types,\r\n    actions,\r\n    defaultState,\r\n    handleActions\r\n  }\r\n}\r\n\r\nexport const generateListSagas = (actions, service) => {\r\n  return {\r\n    *getList({ payload }) {\r\n      try {\r\n        // console.log(\"GET LIST CALL GENERATE FUC\", payload)\r\n        yield put(actions.setListLoading(true))\r\n        yield put(actions.setPageListDefault())\r\n        const codeLanguage = yield select(getCodeLanguage)\r\n        // console.log(\"CODE LANG\", codeLanguage)\r\n        const res = yield call(service.getListService, {\r\n          payload,\r\n          codeLanguage\r\n        })\r\n        // console.log(\"RES CALL\", res)\r\n        const { data } = res\r\n        if (res.status === SUCCESS) {\r\n          if (data.retCode === RETCODE_SUCCESS) {\r\n            yield put(actions.getListSuccess(data))\r\n          } else {\r\n            yield put(actions.getListFailed())\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n      } finally {\r\n        yield put(actions.setListLoading(false))\r\n      }\r\n    },\r\n    *getLoadMoreList({ payload }) {\r\n      try {\r\n        yield put(actions.setListLoadingLoadMore(true))\r\n        const codeLanguage = yield select(getCodeLanguage)\r\n        const res = yield call(service.getListService, {\r\n          payload,\r\n          codeLanguage\r\n        })\r\n        const { data } = res\r\n        if (res.status === SUCCESS) {\r\n          if (data.retCode === RETCODE_SUCCESS) {\r\n            yield put(actions.getListLoadMoreSuccess(res.data))\r\n          } else {\r\n            yield put(actions.getListLoadMoreFailed())\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n      } finally {\r\n        yield put(actions.setListLoadingLoadMore(false))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const generateFormSubmitRedux = (name) => {\r\n  const nameUp = name.toUpperCase()\r\n  const types = {\r\n    [`${nameUp}_METHOD`]: `${nameUp}_METHOD`,\r\n    [`${nameUp}_LOADING`]: `${nameUp}_LOADING`,\r\n    [`${nameUp}_SUCCESS`]: `${nameUp}_SUCCESS`,\r\n    [`${nameUp}_ERROR`]: `${nameUp}_ERROR`,\r\n    [`${nameUp}_RESET`]: `${nameUp}_RESET`\r\n  }\r\n\r\n  const actions = {\r\n    [`${name}FnMethod`]: createAction(`${nameUp}_METHOD`),\r\n    [`${name}FnLoading`]: createAction(`${nameUp}_LOADING`),\r\n    [`${name}FnSuccess`]: createAction(`${nameUp}_SUCCESS`),\r\n    [`${name}FnError`]: createAction(`${nameUp}_ERROR`),\r\n    [`${name}FnReset`]: createAction(`${nameUp}_RESET`)\r\n  }\r\n\r\n  const defaultState = {\r\n    [`${name}Loading`]: false,\r\n    [`${name}Success`]: false,\r\n    [`${name}Error`]: false,\r\n    [`${name}DataResponse`]: null\r\n  }\r\n\r\n  const handleActions = {\r\n    [`${nameUp}_LOADING`]: (state, { payload }) => {\r\n      return { ...state, [`${name}Loading`]: payload }\r\n    },\r\n    [`${nameUp}_SUCCESS`]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        [`${name}Error`]: false,\r\n        [`${name}Success`]: true,\r\n        [`${name}DataResponse`]: Array.isArray(payload)\r\n          ? [...payload]\r\n          : typeof payload === \"object\"\r\n          ? { ...payload }\r\n          : payload\r\n      }\r\n    },\r\n    [`${nameUp}_ERROR`]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        [`${name}Success`]: false,\r\n        [`${name}Error`]: true,\r\n        [`${name}DataResponse`]:\r\n          typeof payload === \"object\" ? { ...payload } : payload\r\n      }\r\n    },\r\n    [`${nameUp}_RESET`]: (state, { payload }) => {\r\n      return {\r\n        [`${name}Loading`]: false,\r\n        [`${name}Success`]: false,\r\n        [`${name}Error`]: false,\r\n        [`${name}DataResponse`]: payload?.keepDataResponse\r\n          ? state[`${name}DataResponse`]\r\n          : null\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    types,\r\n    actions,\r\n    defaultState,\r\n    handleActions\r\n  }\r\n}\r\n\r\nexport const generateFormSubmitSagas = (name, actions, service) => {\r\n  return {\r\n    *[`${name}CallMethod`]({ payload }) {\r\n      try {\r\n        yield put(actions[`${name}FnLoading`](true))\r\n        const codeLanguage = yield select(getCodeLanguage)\r\n        const res = yield call(service[`${name}CallMethod`], {\r\n          payload,\r\n          codeLanguage\r\n        })\r\n        const { data } = res\r\n        if (res.status === SUCCESS) {\r\n          if (data.retCode === RETCODE_SUCCESS) {\r\n            yield put(actions[`${name}FnSuccess`](data.data))\r\n          } else {\r\n            yield put(actions[`${name}FnError`]({ error: data }))\r\n          }\r\n        } else {\r\n          yield put(actions[`${name}FnError`]({ error: \"system_error\" }))\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n        yield put(actions[`${name}FnError`]({ error: \"system_error\" }))\r\n      } finally {\r\n        yield put(actions[`${name}FnLoading`](false))\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}